<!doctype html>


<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />


		<title>Upload - Category</title>


		<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
		<script type="text/javascript" src="/scripts/filepond.js"></script>
		<link rel="stylesheet" type="text/css" href="/styles/filepond.css"/>
		<script type="text/javascript" src="/scripts/filepond-polyfill.js"></script>
		<script type="text/javascript" src="/scripts/filepond-plugin-image-preview.js"></script>
		<link rel="stylesheet" type="text/css" href="/styles/filepond-plugin-image-preview.css" />
		<script type="text/javascript" src="/scripts/filepond-plugin-file-encode.js"></script>
		<script type="text/javascript" src="/scripts/filepond-plugin-file-validate-type.js"></script>

		<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css">
		<link rel="stylesheet" type="text/css" href="/styles/main.css" />
		<link rel="stylesheet" type="text/css" href="/styles/content.css" />
		<link rel="stylesheet" type="text/css" href="/styles/microsoft.css" />
		<script src="https://www.google.com/recaptcha/api.js" async defer></script>

		<script src="/scripts/lib.js"></script>
	</head>

	<body>
		<header>
			<nav>
				<input class="trigger" type="checkbox" id="hamburger"/>

				<a class="github" href="https://github.com/DamSenViet/LAHacks-Improved"><img src="/icons/github.svg"/></a>

				<a class="logo" href="/">Upload</a>


				<label class="right hamburger center-parent mobile" for="hamburger">
					<div class="center">
						<div class="top bar"></div>
						<div class="middle bar"></div>
						<div class="bottom bar"></div>
					</div>
				</label>

				<div class="menu-items">
					<div class="search">
						<input type="text" list="suggestions" placeholder="Search..."/>

						<datalist id="suggestions">
						</datalist>
					</div>

					<% if (!isAuthenticated) { %>
					<a class="main" href="/login"><span class="centered-text">Login</span></a>
					<a class="main" href="/signup"><span class="centered-text">Sign Up</span></a>

					<% } else { %>

					<div class="dropdown settings">
						<a class="main"><%=username %></a>
						<ul>
							<li><a class="user-icon">Profile</a></li>
							<li><a class="gear-icon">Settings</a></li>
						</ul>
					</div>
					<% } %>

					<div class="dropdown categories">
						<a class="main desktop">Categories</a>
						<ul class="desktop">
							<% for (let i = 0; i < categories.length; ++i) { %>
								<li><a href="<%= '/category/'+categories[i].unmodifiedName %>"><%= categories[i].name %></a></li>
							<% } %>
						</ul>

						<div class="select-wrapper mobile">
							<select>
								<option disabled selected hidden>Categories</option>
								<% for (let i = 0; i < categories.length; ++i) { %>
									<option value="<%= '/category/'+categories[i].unmodifiedName %>"><%= categories[i].name %></option>
								<% } %>
							</select>
						</div>
					</div>


				</div>
			</nav>
		</header>


		<main class="upload">

			<div class="background desktop">
				<img src="/media/upload.svg"/>
			</div>

			<div class="form">
				<form class="uploadForm">

					<h2 class="submit-category">Submit to <span class="category-name"><%= categoryName %></span></h2>

					<label for="title"><span>Post Title</span><span class="error-message"></span></label>
					<input id="title" class="title" type="text" name="title" placeholder="" autocomplete="off" required/>

					<label for="description"><span>Description</span> <span class="error-message"></span></label>
					<div class="block-wrapper">
						<textarea id="description" class="description" maxlength="140" placeholder="Enter text here.." autocomplete="off"></textarea>
						<div class="character-count">140</div>
					</div>

					<!-- label here is different due to API -->
					<label for="file"><span>Add Photo</span> <span class="error-message"></span></label>
					<input id="file" class="filepond file" type="file" accept="image/*" required/>

					<div class="submit-container">
						<button id="submit" class="submit" type="submit"><div class="upload-progress"></div><span class="submit-text">Upload</span></button>
					</div>
				</form>
			</div>
		</main>




		<!-- FilePond  script -->
		<script>
			FilePond.registerPlugin(
				FilePondPluginImagePreview,
				FilePondPluginFileEncode,
				FilePondPluginFileValidateType
			);

			const inputElement = document.querySelector('.filepond');
			// create the instance
			const filepond = FilePond.create(inputElement, {
				// server: 'https://pqina.nl/filepond/api/'
			});

			// for altering events
			const pond = document.querySelector('.filepond-root');
			const hold = document.querySelector('input[name="filepond"]');
		</script>

		<!-- functional script -->
		<script>
		const rem =	parseFloat(
			window.getComputedStyle(document.documentElement,null).getPropertyValue("font-size")
		);

		/* PREVENT TOO MUCH DESCRIPTION */
		/* ALSO AUTO-EXPAND TEXTAREA */
		// resize when user desides to delete characters
		$('.description').on('keyup', function(event) {
			// smoothly keep old size
			let old = this.style.minHeight;

			// act as if it has no size and figure out it's actual size from scroll
			this.style.minHeight = "auto";
			// overwrite and set to scrollsize

			// cap resize
			if (this.scrollHeight >= 0.4 * window.innerHeight) {
				this.style.minHeight = old;
				document.querySelector('.character-count').style.right = "25px";
			} else {
				this.style.minHeight = (this.scrollHeight + 40) + "px";
				document.querySelector('.character-count').style.right = "10px";
			}
		});

		$('.description').on('keydown', function(event) {
			if ($(this).val().length > this.maxLength) {
				$(this).val($(this).val().substr(0, $(this).prop('maxlength')));
			}
			$('.character-count').text($(this).prop('maxlength') - $(this).val().length);
			$(this).trigger('keyup');
		});

		$('.description').on('paste', function(event) {
			// trigger; a bit after pasting (otherwise it'll have extra characters)
			window.setTimeout(function(){
				$(this).trigger('keydown');
			}, 100);
		});


		// have to poll b/c old version of FilePond didn't have callback
		// only one encodedChecker interval exists at any time
		var encodedChecker = null;
		// AJAX SEND SEQUENCE
		$('.uploadForm').on('submit', function(event) {
			// NOTE: pattern matching occurs before preventDefault
			// input required checking also done for us
			event.preventDefault();
			console.log('attempted submit')

			$('.submit').removeClass('JSfail');
			$('.submit').addClass('JSonprogress');

			// reset encodedChecker
			if (encodedChecker !== null) {
				window.clearInterval(encodedChecker);
				encodedChecker = null;
			}

			// start/restart encodedChecker on click
			// check every 300ms for encoding finish
			encodedChecker = window.setInterval(function(){
				console.log('polling...');
				if ($('input[name="filepond"]')[0].value !== "") {
					console.log('encoding finished');
					// begin upload process, disable interference
					$('.submit').prop('disabled', true); //disable button while uploading
					$('.submit-text').text("Sending...");

					//begin to send AJAX request
						// on success validate all fields
						// on error set error message, invalidate invalid fields
					$.ajax({
						url: '/category/<%= unmodifiedCategoryName %>/upload',
						type: 'POST',
						data: JSON.stringify({
							title: $('#title').val(),
							description: $('#description').val(),
							imgData: JSON.parse($('input[name="filepond"]')[0].value)
						}),
						contentType: 'application/json',
						dataType: 'json',
						xhr: function(){
                // get the native XmlHttpRequest object
                var xhr = $.ajaxSettings.xhr() ;
                // set the onprogress event handler
                xhr.upload.onprogress = function(event){
                    $('.upload-progress').css('width', (event.loaded/event.total * 100) + '%');
                    console.log('upload progress:', event.loaded/event.total * 100);
                };
                return xhr;
            },
						// keep in mind status is basically useless
						success: function(res, status, xhr) {
							// always know what's coming back
							$('.submit').addClass('JSsuccess');
							$('label .error-message').text('');
							$('.title, .description, .file').removeClass('JSinvalid');
							$('.title, .description, .file').addClass('JSsuccess');

							// setTimeout for animations
							// do redirect to photo

							// console.log('success');
						},
						// status is always fail here, error is the typical
						// status code's error message
						error: function(xhr, status, error) {
							// handle based on status
							$('.submit').addClass('JSfail');
							if (xhr.status === 400 && xhr.responseJSON) {
								console.log(xhr.responseJSON);

								// set error messages and set invalid fields
								for (var field in xhr.responseJSON) {
									$('label[for="' + field + '"] .error-message').text(xhr.responseJSON[field]);
									let inputs = $('.' + field);
									// restart animation for invalid fields
									inputs.removeClass('JSinvalid');
									window.setTimeout(function(){
										inputs.addClass('JSinvalid');
									}, 100);
								}
							} else {
								window.alert('¯\\\_(ツ)_/¯\nStatus Code: ' + xhr.status + '\n'
								+ 'Error: ' + xhr.responseText);
							}
						},
						complete: function(xhr, status) {
							$('.upload-progress').css('width', '0%');
							$('.submit').removeClass('JSonprogress');
							$('.submit-text').text("Upload"); // reset button text
							$('.submit').prop('disabled', false); // re-enable button
						}
					});

					window.clearInterval(encodedChecker);
					encodedChecker = null;
				}
			}, 300);
		});


		</script>
		<script src="/scripts/main.js"></script>
	</body>
</html>
